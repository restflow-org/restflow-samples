
imports:

  - classpath:/common/types.yaml
  - classpath:/common/directors.yaml

components:

- id: Filter
  type: Workflow
  properties:
    director: !ref MTDataDrivenDirector
    nodes: 
      - !ref CountToTen
      - !ref FilterNumbers
      - !ref PrintNumbers
    
- id: CountToTen
  type: Node
  properties:
    actor: !ref Ramp
    constants:
      min: 1
      max: 10
    outflows:
      number: /raw/numbers/
    endFlowOnNoOutput: true

- id: FilterNumbers
  type: Node
  properties:   
    actor: !ref BandpassFilter
    constants:
      min: 3
      max: 7
    inflows:
      inNumber: /raw/numbers/
    outflows: 
      outNumber: /filtered/numbers/

- id: PrintNumbers
  type: GroovyActorNode
  properties:
    actor.step: |
      println number
    inflows:
      number: /filtered/numbers/
 

- id: Ramp
  type: GroovyActor
  properties:
    initialize: |
      nextNumber = min
    step: |
      if (nextNumber <= max) {
        number = nextNumber
        nextNumber = nextNumber + inc
      } else {
        _status.setOutputEnable('number', false);
      }
    inputs:
      min: 
        default: 1
      max: 
        default: 1
      inc: 
        default: 1
    outputs:
      number:
    state:
      nextNumber:
          
- id: BandpassFilter
  type: GroovyActor
  properties:
    step: |
      if ( inNumber >= min && inNumber <= max) {
        outNumber = inNumber;
      } else {
        _status.setOutputEnable('outNumber', false);
      }
    inputs:
      min:
      max:
      inNumber:
    outputs: 
      outNumber:
